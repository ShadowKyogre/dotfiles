funced () {
	if [ -z "$1" ]
	then
		echo "Can't edit function with no name" 2>&1
		return 1
	fi
	autoload -Uz zed
	local name_type="$(type -w "$1"|cut -d':' -f2)" 
	if [ -z "$EDITOR" ]
	then
		[ "$name_type" = " function" ] && zed -f "$1"
		return "$?"
	else
		local tmppath="$(mktemp -d "${TMPPREFIX}-${USER}XXXX")" 
		if [ "$?" -ne 0 ]
		then
			echo "Can't create tmp dir for tmp func, exiting" 2>&1
			return 1
		fi
		local tmpname="${tmppath}/$1" 
		if [ "$name_type" = " function" ] > /dev/null
		then
			local UNKNOWN_FMT="$1 \(\) {\n(?:\t# undefined\n)?\tbuiltin autoload -XUz\n}" 
			if which "$1" | pcregrep -Mnq "$UNKNOWN_FMT"
			then
				echo "Forcing definition load of $1"
				autoload -Uz +X "$1"
			fi
			which "$1" > "$tmpname"
		elif [ "$name_type" = " command" ]
		then
			echo -e "$1() {\n\tcommand ${1} \$@\n\n}" > "$tmpname"
		elif [ "$name_type" = " none" ]
		then
			echo -e "$1() {\n\n}" > "$tmpname"
		else
			echo "I can't edit an alias :|" 2>&1
			return 1
		fi
		$EDITOR "$tmpname"
		fpath=("$tmppath" $fpath) 
		if typeset -f "$1" > /dev/null; then
			unfunction "$1"
		fi
		autoload -Uz +X "$1"
		rm -f "$tmpname" > /dev/null
		rmdir "$tmppath" > /dev/null
		fpath[1]=() 
		return "${retcode:-0}"
	fi
}
